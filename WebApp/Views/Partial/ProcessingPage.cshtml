<style>
    .sk-cube-grid .sk-cube {
        width: 33%;
        height: 33%;
        /*background-color: #1a237e;*/
        background-image: src(.\img\image_part_001.png);
        float: left;
        -webkit-animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
        animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
    }

    .sk-cube-grid .sk-cube1 {
        -webkit-animation-delay: 0.2s;
        animation-delay: 0.2s;
    }

    .sk-cube-grid .sk-cube2 {
        -webkit-animation-delay: 0.3s;
        animation-delay: 0.3s;
    }

    .sk-cube-grid .sk-cube3 {
        -webkit-animation-delay: 0.4s;
        animation-delay: 0.4s;
    }

    .sk-cube-grid .sk-cube4 {
        -webkit-animation-delay: 0.1s;
        animation-delay: 0.1s;
    }

    .sk-cube-grid .sk-cube5 {
        -webkit-animation-delay: 0.2s;
        animation-delay: 0.2s;
    }

    .sk-cube-grid .sk-cube6 {
        -webkit-animation-delay: 0.3s;
        animation-delay: 0.3s;
    }

    .sk-cube-grid .sk-cube7 {
        -webkit-animation-delay: 0s;
        animation-delay: 0s;
    }

    .sk-cube-grid .sk-cube8 {
        -webkit-animation-delay: 0.1s;
        animation-delay: 0.1s;
    }

    .sk-cube-grid .sk-cube9 {
        -webkit-animation-delay: 0.2s;
        animation-delay: 0.2s;
    }

    @@-webkit-keyframes sk-cubeGridScaleDelay {
        0%, 70%, 100% {
            -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
        }

        35% {
            -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
        }
    }

    @@keyframes sk-cubeGridScaleDelay {
        0%, 70%, 100% {
            -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
        }

        35% {
            -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
        }
    }

    .picture_size {
        width: 100%;
        height: 100%;
    }
</style>


<div class="container">
    <div class="row justify-content-center">
        <div class="col-6 align-self-center">
            <div class="ratio ratio-1x1">
                <div class="sk-cube-grid">
                    <div class="sk-cube sk-cube1"><img class="picture_size" src=".\img\image_part_001.png"></div>
                    <div class="sk-cube sk-cube2"><img class="picture_size" src=".\img\image_part_002.png"></div>
                    <div class="sk-cube sk-cube3"><img class="picture_size" src=".\img\image_part_003.png"></div>
                    <div class="sk-cube sk-cube4"><img class="picture_size" src=".\img\image_part_004.png"></div>
                    <div class="sk-cube sk-cube5"><img class="picture_size" src=".\img\image_part_005.png"></div>
                    <div class="sk-cube sk-cube6"><img class="picture_size" src=".\img\image_part_006.png"></div>
                    <div class="sk-cube sk-cube7"><img class="picture_size" src=".\img\image_part_007.png"></div>
                    <div class="sk-cube sk-cube8"><img class="picture_size" src=".\img\image_part_008.png"></div>
                    <div class="sk-cube sk-cube9"><img class="picture_size" src=".\img\image_part_009.png"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<label id="testf1">asdsad</label>

@{
    WebApp.Image.JSON.ImageGenerator imageGenerator = new();
    var s = imageGenerator.GenerateAndGetImagePath("frog");

    var src = $"data:image/gif;base64,{imageGenerator.GetBase64PixalatedImage(s)}";
}
<img src="@src" />
<img src="@s" />


<script type="text/javascript">
    s=0;

        function GetUser() {
        const response = fetch("/Home/IsDone", {
            method: "GET",
            headers: { "Accept": "application/json" }
        });
        if (response.ok === true) {
            const data = response.json();

            if(data0){
                clearInterval(timerId);

        window.location.href= '@Url.Action("ItsFine", "Home")';
            }
        }
        }

        GetUser();

          // повторить с интервалом 2 секунды
    let timerId = setInterval(() =>{
        GetUser()
        s++
    }, 1000);

</script>